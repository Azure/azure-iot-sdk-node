/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing SearchOptions.
 */
export interface SearchOptions {
  /**
   * @member {string} [searchKeyword]
   */
  searchKeyword?: string;
  /**
   * @member {ModelFilterType} [modelFilterType] Possible values include:
   * 'interface', 'capabilityModel'
   */
  modelFilterType?: ModelFilterType;
  /**
   * @member {string} [continuationToken]
   */
  continuationToken?: string;
  /**
   * @member {number} [pageSize]
   */
  pageSize?: number;
}

/**
 * @interface
 * An interface representing ModelInformation.
 */
export interface ModelInformation {
  /**
   * @member {string} [comment]
   */
  comment?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [displayName]
   */
  displayName?: string;
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [modelName]
   */
  modelName?: string;
  /**
   * @member {string} [version]
   */
  version?: string;
  /**
   * @member {Type} [type] Possible values include: 'interface',
   * 'capabilityModel'
   */
  type?: Type;
  /**
   * @member {string} [etag]
   */
  etag?: string;
  /**
   * @member {string} [publisherId]
   */
  publisherId?: string;
  /**
   * @member {string} [publisherName]
   */
  publisherName?: string;
  /**
   * @member {Date} [createdOn]
   */
  createdOn?: Date;
  /**
   * @member {Date} [lastUpdated]
   */
  lastUpdated?: Date;
}

/**
 * @interface
 * An interface representing SearchResponse.
 */
export interface SearchResponse {
  /**
   * @member {string} [continuationToken]
   */
  continuationToken?: string;
  /**
   * @member {ModelInformation[]} [results]
   */
  results?: ModelInformation[];
}

/**
 * @interface
 * An interface representing DigitalTwinRepositoryServiceOptions.
 * @extends ServiceClientOptions
 */
export interface DigitalTwinRepositoryServiceOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing DigitalTwinRepositoryServiceGetModelOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DigitalTwinRepositoryServiceGetModelOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [repositoryId] To access private repo, repositoryId is
   * the repo id. To access global repo, caller should not specify this value.
   */
  repositoryId?: string;
  /**
   * @member {string} [xMsClientRequestId] Optional. Provides a
   * client-generated opaque value that is recorded in the logs. Using this
   * header is highly recommended for correlating client-side activities with
   * requests received by the server.
   */
  xMsClientRequestId?: string;
  /**
   * @member {boolean} [expand] Indicates whether to expand the capability
   * model's interface definitions inline or not. This query parameter ONLY
   * applies to Capability model. Default value: false .
   */
  expand?: boolean;
}

/**
 * @interface
 * An interface representing DigitalTwinRepositoryServiceCreateOrUpdateMetamodelOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DigitalTwinRepositoryServiceCreateOrUpdateMetamodelOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [repositoryId] To access private repo, repositoryId is
   * the repo id\r\nTo access global repo, caller should not specify this
   * value.
   */
  repositoryId?: string;
  /**
   * @member {string} [xMsClientRequestId] Optional. Provides a
   * client-generated opaque value that is recorded in the logs. Using this
   * header is highly recommended for correlating client-side activities with
   * requests received by the server.
   */
  xMsClientRequestId?: string;
  /**
   * @member {string} [ifMatch] Used to make operation conditional for
   * optimistic concurrency. That is, the document is updated only if the
   * specified etag matches the current version in the database. The value
   * should be set to the etag value of the resource.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing DigitalTwinRepositoryServiceDeleteMetamodelOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DigitalTwinRepositoryServiceDeleteMetamodelOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [xMsClientRequestId] Optional. Provides a
   * client-generated opaque value that is recorded in the logs. Using this
   * header is highly recommended for correlating client-side activities with
   * requests received by the server.
   */
  xMsClientRequestId?: string;
}

/**
 * @interface
 * An interface representing DigitalTwinRepositoryServiceSearchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DigitalTwinRepositoryServiceSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [repositoryId] To access private repo, repositoryId is
   * the repo id.\r\nDelete is not allowed for public repository.
   */
  repositoryId?: string;
  /**
   * @member {string} [xMsClientRequestId] Optional. Provides a
   * client-generated opaque value that is recorded in the logs. Using this
   * header is highly recommended for correlating client-side activities with
   * requests received by the server..
   */
  xMsClientRequestId?: string;
}

/**
 * @interface
 * An interface representing GetModelHeaders.
 * Defines headers for GetModel operation.
 *
 */
export interface GetModelHeaders {
  /**
   * @member {string} [xMsRequestId] This header is generated by server and
   * uniquely identifies the request that was made and can be used for
   * troubleshooting the request.
   */
  xMsRequestId: string;
  /**
   * @member {string} [eTag] Etag of the model definition.
   */
  eTag: string;
  /**
   * @member {string} [xMsModelId] Id of the model returned.
   */
  xMsModelId: string;
  /**
   * @member {string} [xMsModelPublisherId] Publisher's AAD tenant Id of the
   * model returned.
   */
  xMsModelPublisherId: string;
  /**
   * @member {string} [xMsModelPublisherName] Publisher's AAD tenant name of
   * the model returned.
   */
  xMsModelPublisherName: string;
  /**
   * @member {Date} [xMsModelCreatedon] ISO8601 timestamp of the creation time
   * of the model returned.
   */
  xMsModelCreatedon: Date;
  /**
   * @member {Date} [xMsModelLastupdated] ISO8601 timestamp of the last update
   * time of the model returned.
   */
  xMsModelLastupdated: Date;
}

/**
 * @interface
 * An interface representing CreateOrUpdateMetamodelHeaders.
 * Defines headers for CreateOrUpdateMetamodel operation.
 *
 */
export interface CreateOrUpdateMetamodelHeaders {
  /**
   * @member {string} [xMsRequestId] This header is generated by server and
   * uniquely identifies the request that was made and can be used for
   * troubleshooting the request.
   */
  xMsRequestId: string;
  /**
   * @member {string} [eTag] Etag of the model definition.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing DeleteMetamodelHeaders.
 * Defines headers for DeleteMetamodel operation.
 *
 */
export interface DeleteMetamodelHeaders {
  /**
   * @member {string} [xMsRequestId] This header is generated by server and
   * uniquely identifies the request that was made and can be used for
   * troubleshooting the request.
   */
  xMsRequestId: string;
}

/**
 * @interface
 * An interface representing SearchHeaders.
 * Defines headers for Search operation.
 *
 */
export interface SearchHeaders {
  /**
   * @member {string} [xMsRequestId] This header is generated by server and
   * uniquely identifies the request that was made and can be used for
   * troubleshooting the request.
   */
  xMsRequestId: string;
}

/**
 * Defines values for ModelFilterType.
 * Possible values include: 'interface', 'capabilityModel'
 * @readonly
 * @enum {string}
 */
export type ModelFilterType = 'interface' | 'capabilityModel';

/**
 * Defines values for Type.
 * Possible values include: 'interface', 'capabilityModel'
 * @readonly
 * @enum {string}
 */
export type Type = 'interface' | 'capabilityModel';

/**
 * Contains response data for the getModel operation.
 */
export type GetModelResponse = GetModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createOrUpdateMetamodel operation.
 */
export type CreateOrUpdateMetamodelResponse = CreateOrUpdateMetamodelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateOrUpdateMetamodelHeaders;
    };
};

/**
 * Contains response data for the deleteMetamodel operation.
 */
export type DeleteMetamodelResponse = DeleteMetamodelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteMetamodelHeaders;
    };
};

/**
 * Contains response data for the search operation.
 */
export type SearchResponse2 = SearchResponse & SearchHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SearchHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResponse;
    };
};
