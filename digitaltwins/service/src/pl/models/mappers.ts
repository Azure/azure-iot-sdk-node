/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const VariantValue: msRest.CompositeMapper = {
  serializedName: "VariantValue",
  type: {
    name: "Composite",
    className: "VariantValue",
    modelProperties: {
      objectValue: {
        readOnly: true,
        serializedName: "ObjectValue",
        type: {
          name: "Object"
        }
      },
      isNull: {
        readOnly: true,
        serializedName: "IsNull",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PatchOperation: msRest.CompositeMapper = {
  serializedName: "PatchOperation",
  type: {
    name: "Composite",
    className: "PatchOperation",
    modelProperties: {
      op: {
        serializedName: "op",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "VariantValue"
        }
      },
      from: {
        serializedName: "from",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinPatch: msRest.CompositeMapper = {
  serializedName: "DigitalTwinPatch",
  type: {
    name: "Composite",
    className: "DigitalTwinPatch",
    modelProperties: {
      operations: {
        serializedName: "Operations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PatchOperation"
            }
          }
        }
      }
    }
  }
};

export const DigitalTwinInvokeComponentCommandHeaders: msRest.CompositeMapper = {
  serializedName: "digitaltwin-invokecomponentcommand-headers",
  type: {
    name: "Composite",
    className: "DigitalTwinInvokeComponentCommandHeaders",
    modelProperties: {
      xMsCommandStatuscode: {
        serializedName: "x-ms-command-statuscode",
        type: {
          name: "Number"
        }
      },
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};
